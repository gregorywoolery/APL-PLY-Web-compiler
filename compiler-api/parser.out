Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> start
Rule 1     start -> expression
Rule 2     start -> statement
Rule 3     start -> var_assign
Rule 4     start -> empty
Rule 5     statement -> PRINT NORMSTRING
Rule 6     statement -> PRINT expression
Rule 7     statement -> PRINT expression COMMA expression
Rule 8     statement -> PRINT NORMSTRING COMMA expression
Rule 9     statement -> PRINT error
Rule 10    var_assign -> NAME EQUALS expression
Rule 11    var_assign -> NAME EQUALS NORMSTRING
Rule 12    expression -> expression MULTIPLY expression
Rule 13    expression -> expression DIVIDE expression
Rule 14    expression -> expression PLUS expression
Rule 15    expression -> expression MINUS expression
Rule 16    expression -> expression EXPONENTIATION expression
Rule 17    expression -> INT
Rule 18    expression -> FLOAT
Rule 19    expression -> NAME
Rule 20    expression -> LPAREN expression RPAREN
Rule 21    empty -> <empty>

Terminals, with rules where they appear

COMMA                : 7 8
COMMENT              : 
DIVIDE               : 13
EQUALS               : 10 11
EXPONENTIATION       : 16
FLOAT                : 18
INT                  : 17
LPAREN               : 20
MINUS                : 15
MULTIPLY             : 12
NAME                 : 10 11 19
NORMSTRING           : 5 8 11
PLUS                 : 14
PRINT                : 5 6 7 8 9
RPAREN               : 20
error                : 9

Nonterminals, with rules where they appear

empty                : 4
expression           : 1 6 7 7 8 10 12 12 13 13 14 14 15 15 16 16 20
start                : 0
statement            : 2
var_assign           : 3

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . expression
    (2) start -> . statement
    (3) start -> . var_assign
    (4) start -> . empty
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN
    (5) statement -> . PRINT NORMSTRING
    (6) statement -> . PRINT expression
    (7) statement -> . PRINT expression COMMA expression
    (8) statement -> . PRINT NORMSTRING COMMA expression
    (9) statement -> . PRINT error
    (10) var_assign -> . NAME EQUALS expression
    (11) var_assign -> . NAME EQUALS NORMSTRING
    (21) empty -> .

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 8
    LPAREN          shift and go to state 9
    PRINT           shift and go to state 10
    $end            reduce using rule 21 (empty -> .)

    start                          shift and go to state 1
    expression                     shift and go to state 2
    statement                      shift and go to state 3
    var_assign                     shift and go to state 4
    empty                          shift and go to state 5

state 1

    (0) S' -> start .



state 2

    (1) start -> expression .
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    $end            reduce using rule 1 (start -> expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15


state 3

    (2) start -> statement .

    $end            reduce using rule 2 (start -> statement .)


state 4

    (3) start -> var_assign .

    $end            reduce using rule 3 (start -> var_assign .)


state 5

    (4) start -> empty .

    $end            reduce using rule 4 (start -> empty .)


state 6

    (17) expression -> INT .

    MULTIPLY        reduce using rule 17 (expression -> INT .)
    DIVIDE          reduce using rule 17 (expression -> INT .)
    PLUS            reduce using rule 17 (expression -> INT .)
    MINUS           reduce using rule 17 (expression -> INT .)
    EXPONENTIATION  reduce using rule 17 (expression -> INT .)
    $end            reduce using rule 17 (expression -> INT .)
    RPAREN          reduce using rule 17 (expression -> INT .)
    COMMA           reduce using rule 17 (expression -> INT .)


state 7

    (18) expression -> FLOAT .

    MULTIPLY        reduce using rule 18 (expression -> FLOAT .)
    DIVIDE          reduce using rule 18 (expression -> FLOAT .)
    PLUS            reduce using rule 18 (expression -> FLOAT .)
    MINUS           reduce using rule 18 (expression -> FLOAT .)
    EXPONENTIATION  reduce using rule 18 (expression -> FLOAT .)
    $end            reduce using rule 18 (expression -> FLOAT .)
    RPAREN          reduce using rule 18 (expression -> FLOAT .)
    COMMA           reduce using rule 18 (expression -> FLOAT .)


state 8

    (19) expression -> NAME .
    (10) var_assign -> NAME . EQUALS expression
    (11) var_assign -> NAME . EQUALS NORMSTRING

    MULTIPLY        reduce using rule 19 (expression -> NAME .)
    DIVIDE          reduce using rule 19 (expression -> NAME .)
    PLUS            reduce using rule 19 (expression -> NAME .)
    MINUS           reduce using rule 19 (expression -> NAME .)
    EXPONENTIATION  reduce using rule 19 (expression -> NAME .)
    $end            reduce using rule 19 (expression -> NAME .)
    EQUALS          shift and go to state 16


state 9

    (20) expression -> LPAREN . expression RPAREN
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 17

state 10

    (5) statement -> PRINT . NORMSTRING
    (6) statement -> PRINT . expression
    (7) statement -> PRINT . expression COMMA expression
    (8) statement -> PRINT . NORMSTRING COMMA expression
    (9) statement -> PRINT . error
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    NORMSTRING      shift and go to state 19
    error           shift and go to state 21
    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 20

state 11

    (12) expression -> expression MULTIPLY . expression
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 22

state 12

    (13) expression -> expression DIVIDE . expression
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 23

state 13

    (14) expression -> expression PLUS . expression
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 24

state 14

    (15) expression -> expression MINUS . expression
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 25

state 15

    (16) expression -> expression EXPONENTIATION . expression
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 26

state 16

    (10) var_assign -> NAME EQUALS . expression
    (11) var_assign -> NAME EQUALS . NORMSTRING
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    NORMSTRING      shift and go to state 28
    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 27

state 17

    (20) expression -> LPAREN expression . RPAREN
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    RPAREN          shift and go to state 29
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15


state 18

    (19) expression -> NAME .

    RPAREN          reduce using rule 19 (expression -> NAME .)
    MULTIPLY        reduce using rule 19 (expression -> NAME .)
    DIVIDE          reduce using rule 19 (expression -> NAME .)
    PLUS            reduce using rule 19 (expression -> NAME .)
    MINUS           reduce using rule 19 (expression -> NAME .)
    EXPONENTIATION  reduce using rule 19 (expression -> NAME .)
    COMMA           reduce using rule 19 (expression -> NAME .)
    $end            reduce using rule 19 (expression -> NAME .)


state 19

    (5) statement -> PRINT NORMSTRING .
    (8) statement -> PRINT NORMSTRING . COMMA expression

    $end            reduce using rule 5 (statement -> PRINT NORMSTRING .)
    COMMA           shift and go to state 30


state 20

    (6) statement -> PRINT expression .
    (7) statement -> PRINT expression . COMMA expression
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    $end            reduce using rule 6 (statement -> PRINT expression .)
    COMMA           shift and go to state 31
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15


state 21

    (9) statement -> PRINT error .

    $end            reduce using rule 9 (statement -> PRINT error .)


state 22

    (12) expression -> expression MULTIPLY expression .
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    MULTIPLY        reduce using rule 12 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 12 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 12 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 12 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 12 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 12 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 12 (expression -> expression MULTIPLY expression .)
    EXPONENTIATION  shift and go to state 15

  ! EXPONENTIATION  [ reduce using rule 12 (expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]


state 23

    (13) expression -> expression DIVIDE expression .
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    MULTIPLY        reduce using rule 13 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 13 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 13 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 13 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 13 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 13 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 13 (expression -> expression DIVIDE expression .)
    EXPONENTIATION  shift and go to state 15

  ! EXPONENTIATION  [ reduce using rule 13 (expression -> expression DIVIDE expression .) ]
  ! MULTIPLY        [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]


state 24

    (14) expression -> expression PLUS expression .
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    PLUS            reduce using rule 14 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 14 (expression -> expression PLUS expression .)
    $end            reduce using rule 14 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 14 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENTIATION  shift and go to state 15

  ! MULTIPLY        [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! EXPONENTIATION  [ reduce using rule 14 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]


state 25

    (15) expression -> expression MINUS expression .
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    PLUS            reduce using rule 15 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 15 (expression -> expression MINUS expression .)
    $end            reduce using rule 15 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 15 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENTIATION  shift and go to state 15

  ! MULTIPLY        [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! EXPONENTIATION  [ reduce using rule 15 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]


state 26

    (16) expression -> expression EXPONENTIATION expression .
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    MULTIPLY        reduce using rule 16 (expression -> expression EXPONENTIATION expression .)
    DIVIDE          reduce using rule 16 (expression -> expression EXPONENTIATION expression .)
    PLUS            reduce using rule 16 (expression -> expression EXPONENTIATION expression .)
    MINUS           reduce using rule 16 (expression -> expression EXPONENTIATION expression .)
    EXPONENTIATION  reduce using rule 16 (expression -> expression EXPONENTIATION expression .)
    $end            reduce using rule 16 (expression -> expression EXPONENTIATION expression .)
    RPAREN          reduce using rule 16 (expression -> expression EXPONENTIATION expression .)
    COMMA           reduce using rule 16 (expression -> expression EXPONENTIATION expression .)

  ! MULTIPLY        [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! EXPONENTIATION  [ shift and go to state 15 ]


state 27

    (10) var_assign -> NAME EQUALS expression .
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    $end            reduce using rule 10 (var_assign -> NAME EQUALS expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15


state 28

    (11) var_assign -> NAME EQUALS NORMSTRING .

    $end            reduce using rule 11 (var_assign -> NAME EQUALS NORMSTRING .)


state 29

    (20) expression -> LPAREN expression RPAREN .

    MULTIPLY        reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    EXPONENTIATION  reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 20 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 20 (expression -> LPAREN expression RPAREN .)


state 30

    (8) statement -> PRINT NORMSTRING COMMA . expression
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 32

state 31

    (7) statement -> PRINT expression COMMA . expression
    (12) expression -> . expression MULTIPLY expression
    (13) expression -> . expression DIVIDE expression
    (14) expression -> . expression PLUS expression
    (15) expression -> . expression MINUS expression
    (16) expression -> . expression EXPONENTIATION expression
    (17) expression -> . INT
    (18) expression -> . FLOAT
    (19) expression -> . NAME
    (20) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 33

state 32

    (8) statement -> PRINT NORMSTRING COMMA expression .
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    $end            reduce using rule 8 (statement -> PRINT NORMSTRING COMMA expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15


state 33

    (7) statement -> PRINT expression COMMA expression .
    (12) expression -> expression . MULTIPLY expression
    (13) expression -> expression . DIVIDE expression
    (14) expression -> expression . PLUS expression
    (15) expression -> expression . MINUS expression
    (16) expression -> expression . EXPONENTIATION expression

    $end            reduce using rule 7 (statement -> PRINT expression COMMA expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15

