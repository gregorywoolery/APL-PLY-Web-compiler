Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    SEMI

Grammar

Rule 0     S' -> calc
Rule 1     calc -> expression
Rule 2     calc -> statement
Rule 3     calc -> var_assign
Rule 4     calc -> empty
Rule 5     statement -> PRINT NAME
Rule 6     statement -> PRINT NORMSTRING
Rule 7     statement -> PRINT expression
Rule 8     statement -> PRINT error
Rule 9     var_assign -> NAME EQUALS expression
Rule 10    var_assign -> NAME EQUALS NORMSTRING
Rule 11    expression -> expression MULTIPLY expression
Rule 12    expression -> expression DIVIDE expression
Rule 13    expression -> expression PLUS expression
Rule 14    expression -> expression MINUS expression
Rule 15    expression -> expression EXPONENTIATION expression
Rule 16    expression -> INT
Rule 17    expression -> FLOAT
Rule 18    expression -> NAME
Rule 19    expression -> LPAREN expression RPAREN
Rule 20    empty -> <empty>

Terminals, with rules where they appear

COMMENT              : 
DIVIDE               : 12
EQUALS               : 9 10
EXPONENTIATION       : 15
FLOAT                : 17
INT                  : 16
LPAREN               : 19
MINUS                : 14
MULTIPLY             : 11
NAME                 : 5 9 10 18
NORMSTRING           : 6 10
PLUS                 : 13
PRINT                : 5 6 7 8
RPAREN               : 19
SEMI                 : 
error                : 8

Nonterminals, with rules where they appear

calc                 : 0
empty                : 4
expression           : 1 7 9 11 11 12 12 13 13 14 14 15 15 19
statement            : 2
var_assign           : 3

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . expression
    (2) calc -> . statement
    (3) calc -> . var_assign
    (4) calc -> . empty
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression EXPONENTIATION expression
    (16) expression -> . INT
    (17) expression -> . FLOAT
    (18) expression -> . NAME
    (19) expression -> . LPAREN expression RPAREN
    (5) statement -> . PRINT NAME
    (6) statement -> . PRINT NORMSTRING
    (7) statement -> . PRINT expression
    (8) statement -> . PRINT error
    (9) var_assign -> . NAME EQUALS expression
    (10) var_assign -> . NAME EQUALS NORMSTRING
    (20) empty -> .

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 8
    LPAREN          shift and go to state 9
    PRINT           shift and go to state 10
    $end            reduce using rule 20 (empty -> .)

    calc                           shift and go to state 1
    expression                     shift and go to state 2
    statement                      shift and go to state 3
    var_assign                     shift and go to state 4
    empty                          shift and go to state 5

state 1

    (0) S' -> calc .



state 2

    (1) calc -> expression .
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . EXPONENTIATION expression

    $end            reduce using rule 1 (calc -> expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15


state 3

    (2) calc -> statement .

    $end            reduce using rule 2 (calc -> statement .)


state 4

    (3) calc -> var_assign .

    $end            reduce using rule 3 (calc -> var_assign .)


state 5

    (4) calc -> empty .

    $end            reduce using rule 4 (calc -> empty .)


state 6

    (16) expression -> INT .

    MULTIPLY        reduce using rule 16 (expression -> INT .)
    DIVIDE          reduce using rule 16 (expression -> INT .)
    PLUS            reduce using rule 16 (expression -> INT .)
    MINUS           reduce using rule 16 (expression -> INT .)
    EXPONENTIATION  reduce using rule 16 (expression -> INT .)
    $end            reduce using rule 16 (expression -> INT .)
    RPAREN          reduce using rule 16 (expression -> INT .)


state 7

    (17) expression -> FLOAT .

    MULTIPLY        reduce using rule 17 (expression -> FLOAT .)
    DIVIDE          reduce using rule 17 (expression -> FLOAT .)
    PLUS            reduce using rule 17 (expression -> FLOAT .)
    MINUS           reduce using rule 17 (expression -> FLOAT .)
    EXPONENTIATION  reduce using rule 17 (expression -> FLOAT .)
    $end            reduce using rule 17 (expression -> FLOAT .)
    RPAREN          reduce using rule 17 (expression -> FLOAT .)


state 8

    (18) expression -> NAME .
    (9) var_assign -> NAME . EQUALS expression
    (10) var_assign -> NAME . EQUALS NORMSTRING

    MULTIPLY        reduce using rule 18 (expression -> NAME .)
    DIVIDE          reduce using rule 18 (expression -> NAME .)
    PLUS            reduce using rule 18 (expression -> NAME .)
    MINUS           reduce using rule 18 (expression -> NAME .)
    EXPONENTIATION  reduce using rule 18 (expression -> NAME .)
    $end            reduce using rule 18 (expression -> NAME .)
    EQUALS          shift and go to state 16


state 9

    (19) expression -> LPAREN . expression RPAREN
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression EXPONENTIATION expression
    (16) expression -> . INT
    (17) expression -> . FLOAT
    (18) expression -> . NAME
    (19) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 17

state 10

    (5) statement -> PRINT . NAME
    (6) statement -> PRINT . NORMSTRING
    (7) statement -> PRINT . expression
    (8) statement -> PRINT . error
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression EXPONENTIATION expression
    (16) expression -> . INT
    (17) expression -> . FLOAT
    (18) expression -> . NAME
    (19) expression -> . LPAREN expression RPAREN

    NAME            shift and go to state 19
    NORMSTRING      shift and go to state 20
    error           shift and go to state 22
    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    LPAREN          shift and go to state 9

    expression                     shift and go to state 21

state 11

    (11) expression -> expression MULTIPLY . expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression EXPONENTIATION expression
    (16) expression -> . INT
    (17) expression -> . FLOAT
    (18) expression -> . NAME
    (19) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 23

state 12

    (12) expression -> expression DIVIDE . expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression EXPONENTIATION expression
    (16) expression -> . INT
    (17) expression -> . FLOAT
    (18) expression -> . NAME
    (19) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 24

state 13

    (13) expression -> expression PLUS . expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression EXPONENTIATION expression
    (16) expression -> . INT
    (17) expression -> . FLOAT
    (18) expression -> . NAME
    (19) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 25

state 14

    (14) expression -> expression MINUS . expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression EXPONENTIATION expression
    (16) expression -> . INT
    (17) expression -> . FLOAT
    (18) expression -> . NAME
    (19) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 26

state 15

    (15) expression -> expression EXPONENTIATION . expression
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression EXPONENTIATION expression
    (16) expression -> . INT
    (17) expression -> . FLOAT
    (18) expression -> . NAME
    (19) expression -> . LPAREN expression RPAREN

    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 27

state 16

    (9) var_assign -> NAME EQUALS . expression
    (10) var_assign -> NAME EQUALS . NORMSTRING
    (11) expression -> . expression MULTIPLY expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression EXPONENTIATION expression
    (16) expression -> . INT
    (17) expression -> . FLOAT
    (18) expression -> . NAME
    (19) expression -> . LPAREN expression RPAREN

    NORMSTRING      shift and go to state 29
    INT             shift and go to state 6
    FLOAT           shift and go to state 7
    NAME            shift and go to state 18
    LPAREN          shift and go to state 9

    expression                     shift and go to state 28

state 17

    (19) expression -> LPAREN expression . RPAREN
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . EXPONENTIATION expression

    RPAREN          shift and go to state 30
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15


state 18

    (18) expression -> NAME .

    RPAREN          reduce using rule 18 (expression -> NAME .)
    MULTIPLY        reduce using rule 18 (expression -> NAME .)
    DIVIDE          reduce using rule 18 (expression -> NAME .)
    PLUS            reduce using rule 18 (expression -> NAME .)
    MINUS           reduce using rule 18 (expression -> NAME .)
    EXPONENTIATION  reduce using rule 18 (expression -> NAME .)
    $end            reduce using rule 18 (expression -> NAME .)


state 19

    (5) statement -> PRINT NAME .
    (18) expression -> NAME .

  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> PRINT NAME .)
    $end            reduce using rule 5 (statement -> PRINT NAME .)
    MULTIPLY        reduce using rule 18 (expression -> NAME .)
    DIVIDE          reduce using rule 18 (expression -> NAME .)
    PLUS            reduce using rule 18 (expression -> NAME .)
    MINUS           reduce using rule 18 (expression -> NAME .)
    EXPONENTIATION  reduce using rule 18 (expression -> NAME .)

  ! $end            [ reduce using rule 18 (expression -> NAME .) ]


state 20

    (6) statement -> PRINT NORMSTRING .

    $end            reduce using rule 6 (statement -> PRINT NORMSTRING .)


state 21

    (7) statement -> PRINT expression .
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . EXPONENTIATION expression

    $end            reduce using rule 7 (statement -> PRINT expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15


state 22

    (8) statement -> PRINT error .

    $end            reduce using rule 8 (statement -> PRINT error .)


state 23

    (11) expression -> expression MULTIPLY expression .
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . EXPONENTIATION expression

    MULTIPLY        reduce using rule 11 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 11 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 11 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 11 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 11 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 11 (expression -> expression MULTIPLY expression .)
    EXPONENTIATION  shift and go to state 15

  ! EXPONENTIATION  [ reduce using rule 11 (expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]


state 24

    (12) expression -> expression DIVIDE expression .
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . EXPONENTIATION expression

    MULTIPLY        reduce using rule 12 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 12 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 12 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 12 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 12 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 12 (expression -> expression DIVIDE expression .)
    EXPONENTIATION  shift and go to state 15

  ! EXPONENTIATION  [ reduce using rule 12 (expression -> expression DIVIDE expression .) ]
  ! MULTIPLY        [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]


state 25

    (13) expression -> expression PLUS expression .
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . EXPONENTIATION expression

    PLUS            reduce using rule 13 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 13 (expression -> expression PLUS expression .)
    $end            reduce using rule 13 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENTIATION  shift and go to state 15

  ! MULTIPLY        [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! EXPONENTIATION  [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]


state 26

    (14) expression -> expression MINUS expression .
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . EXPONENTIATION expression

    PLUS            reduce using rule 14 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 14 (expression -> expression MINUS expression .)
    $end            reduce using rule 14 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    EXPONENTIATION  shift and go to state 15

  ! MULTIPLY        [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! EXPONENTIATION  [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]


state 27

    (15) expression -> expression EXPONENTIATION expression .
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . EXPONENTIATION expression

    MULTIPLY        reduce using rule 15 (expression -> expression EXPONENTIATION expression .)
    DIVIDE          reduce using rule 15 (expression -> expression EXPONENTIATION expression .)
    PLUS            reduce using rule 15 (expression -> expression EXPONENTIATION expression .)
    MINUS           reduce using rule 15 (expression -> expression EXPONENTIATION expression .)
    EXPONENTIATION  reduce using rule 15 (expression -> expression EXPONENTIATION expression .)
    $end            reduce using rule 15 (expression -> expression EXPONENTIATION expression .)
    RPAREN          reduce using rule 15 (expression -> expression EXPONENTIATION expression .)

  ! MULTIPLY        [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! PLUS            [ shift and go to state 13 ]
  ! MINUS           [ shift and go to state 14 ]
  ! EXPONENTIATION  [ shift and go to state 15 ]


state 28

    (9) var_assign -> NAME EQUALS expression .
    (11) expression -> expression . MULTIPLY expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . EXPONENTIATION expression

    $end            reduce using rule 9 (var_assign -> NAME EQUALS expression .)
    MULTIPLY        shift and go to state 11
    DIVIDE          shift and go to state 12
    PLUS            shift and go to state 13
    MINUS           shift and go to state 14
    EXPONENTIATION  shift and go to state 15


state 29

    (10) var_assign -> NAME EQUALS NORMSTRING .

    $end            reduce using rule 10 (var_assign -> NAME EQUALS NORMSTRING .)


state 30

    (19) expression -> LPAREN expression RPAREN .

    MULTIPLY        reduce using rule 19 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 19 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 19 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 19 (expression -> LPAREN expression RPAREN .)
    EXPONENTIATION  reduce using rule 19 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 19 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 19 (expression -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 19 resolved using rule (statement -> PRINT NAME)
WARNING: rejected rule (expression -> NAME) in state 19
